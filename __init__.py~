from __future__ import absolute_import
from __future__ import division
from __future__ import print_function

import tensorflow as tf
import numpy as np
import pandas as pd
from sklearn import tree, metrics
from sklearn.metrics import confusion_matrix

from flask import Flask

app = Flask(__name__)

@app.route('/')
def homepage ():

# Preparing the data:
      data_file_name = 'breast-cancer-wisconsin.data.txt'

      first_line = "id,clump_thickness,unif_cell_size,unif_cell_shape,marg_adhesion,single_epith_cell_size,bare_nuclei,bland_chrom,norm_nucleoli,mitoses,class"
      with open(data_file_name, "r+") as f:
	         content = f.read()
	         f.seek(0, 0)
	         f.write(first_line.rstrip('\r\n') + '\n' + content)
      df = pd.read_csv(data_file_name)
      df.replace('?', np.nan, inplace = True)
      df.dropna(inplace=True)
      df.drop(['id'], axis = 1, inplace = True)

      df['class'].replace('2',0, inplace = True)
      df['class'].replace('4',1, inplace = True)

      df.to_csv("combined_data.csv", index = False)

# Data sets
      CANCER_TRAINING = "cancer_training.csv"
      CANCER_TEST = "cancer_test.csv"

# Load datasets.
      training_set = tf.contrib.learn.datasets.base.load_csv_with_header(filename=CANCER_TRAINING,
                                                       target_dtype=np.int, features_dtype=np.int)
      test_set =     tf.contrib.learn.datasets.base.load_csv_with_header(filename=CANCER_TEST,
                                                   target_dtype=np.int, features_dtype=np.int)

# Build 3 layer DNN with 10, 20, 10 units respectively.
        
      classifier =   tree.DecisionTreeClassifier()

# Fit model.
      classifier = classifier.fit(training_set.data, training_set.target)
      s= classifier.predict([[5,10,8,4,7,4,8,11,2]])
      if (s == [1]):
         return "malignant"

# Evaluate accuracy.


# Classify two new cancer tumor samples.
        


if __name__ == "__main__" :
        app.run()         